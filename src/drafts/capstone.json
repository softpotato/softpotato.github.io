{
    "created": "9-24-2022",
    "updated": "10-13-2022",
    "title": "Capstone - Relational Database Tool",
    "description": "This post is about my experience working with my professor to develop a web tool for relational databases. I'm mostly writing this as a post mortem, also to remind myself in case I need to talk about this in an interview.",
    "type": "project",
    "tags": [
        "undergraduate project",
        "Konvas.js",
        "React.js",
        "Node.js",
        "Material UI.js"
    ],
    "status": "completed",
    "programming_languages": ["JavaScript"],
    "language": "english",
    "splash_image": "",
    "splash_image_alt": "nothing",
    "perma-link": "c",
    "pages": [
        {
            "type": "h2",
            "content": "General Project Info",
            "sections": [
                {
                    "type": "body1",
                    "content": "This section covers general information on the project."
                },
                {
                    "type": "h4",
                    "content": "Goal"
                },
                {
                    "type": "body1",
                    "content": "The original purpose of the project was to create an interactive web tool to replace the old visio modeler my professor used for his relational database class. The tool he provided was so old. I had to enable compatability mode with some 90s windows OS."
                },
                {
                    "type": "body1",
                    "content": "Originally, it was intended to try to create an Object Role Model diagram (ORM), Logical Data Modelling (LDM), and finally SQL database DDL and UI query interface."
                },
                {
                    "type": "body1",
                    "content": "I really fell short on this goal. I completed the ORM diagram tool (to a scuffed amount) and created some early prototypes to the LDM, but I never got past that point. There were major issues with converting between diagram types that took too long for the little amount of time I had."
                },
                {
                    "type": "h4",
                    "content": "TimeLine"
                },
                {
                    "type": "body1",
                    "content": "From June 10th 2021 to June 10th 2022. I only really stopped working on it cause I graduated."
                }
            ]
        },
        {
            "type": "h2",
            "content": "Issues/Stupid Things I did",
            "sections": [
                {
                    "type": "body1",
                    "content": "This section covers problems I encountered during the project."
                },
                {
                    "type": "h4",
                    "content": "Early Learning and Library Building"
                },
                {
                    "type": "body1",
                    "content": "It started off really rough. At this point, I've already gone through a React tutorial, but I need to start setting up the project to create and handle SVG icons you can drag, drop, scale, text edit, and other features. I don't know why, but I was struggling to search this up. At some point, I was talking with my professor and he found like 5-7 different tutorials/APIs instantly. Honestly, I don't know if I should have gone to him sooner or just tried harder with searching on my own. I still feel embaressed about it today."
                },
                {
                    "type": "h4",
                    "content": "State Management Issues"
                },
                {
                    "type": "body1",
                    "content": "I guess at some point, I realized that I needed to handle state for my application. I had to manage what shapes were rendered, where, and why. I don't know what was going through my head at the time. I discovered Flux. My older brother also mentioned that Redux was popular. I think I went through 1 or 2 tutorials with Flux, then decided it was good enough not even bothering with Redux. I choose Flux on a whim. It seemed to remove the need for prop drilling callbacks and made handling all that data in a unidirectional manner so much easier. I'm not sure if it impacted perfomance, but I bet it killed part of it while i was working on the project. Honestly, I regret not trying out Redux, but I really needed to get things done."
                },
                {
                    "type": "h4",
                    "content": "Making a Stupid Builder Class instead of a Factory Pattern"
                },
                {
                    "type": "body1",
                    "content": "At some point, my stupid ass brain mistook the build pattern with the factory pattern. I created no state classes. I did something even worse. I created build classes that made object of state code. The stupidest fucking thing I could have done. I really regret that. It didn't hit me until it was way too late, like graduating late. Like ADSFJaosihdfjkenashoih... Sorry to whoever took over my project. I'm so so sorry for that horrible piece of code."
                },
                {
                    "type": "h4",
                    "content": "Time"
                },
                {
                    "type": "body1",
                    "content": "Time was always an issue with this project. I guess not initially, from June to September. However, after that initial 4 months, it was hell on earth for me. I took a regular course load each quarter for 4 quarters. From September to June. Also, I had just recently added Mathematics to my double major list, so I as doing the heavy hitting courses for Mathematics and Computer Science, cause I missed out on a few cool classes before this. Honestly, every week was a grind. I would spend most of my day just sitting at home grinding my class projects, math problems, and such. Then I'd have to work on this. Sometimes, I only managed to squeeze 1 or 2 days at most in a week to work on this, so I really didn't have time. I tried to schedule things, but that wasted a day. It wasn't worth it and it was a lot more important to focus on the most important thing one at a time. I kept an internal schedule in my head for most things and that helped me get through it, but I guess my poor scheduling and time management lead to a dissapointing amount of progress being made."
                },
                {
                    "type": "h4",
                    "content": "Scope Creep"
                },
                {
                    "type": "body1",
                    "content": "I know this isn't a video game project. The features are sorta set in stone, but hashing it out with my professor on a weekly basis for over a year. I think by the time I left, there were over a hundred features listed on the board that hadn't been touched. There was a lot that could have been done, but didn't because I was just not enough."
                },
                {
                    "type": "h4",
                    "content": "Unit Testing Didn't WORK"
                },
                {
                    "type": "body1",
                    "content": "Konvas.js is an ECMASCript or something, so Jest wasn't compatible at the time (at least not untill mui v5 came out, and then I'd have to update mui v4 to mui v5, but I only had a month left). I couldn't unit test the state to UI, but I could have unit tested the state code. I didn't, and that was my biggest regret. I should have written tests for that. I just recently unit tested my search API, and by god. It's amazing. (Note: I'm an atheist, so I can say god's name in vain)"
                }
            ]
        }
    ]
}